name: Build and Deploy Code

on: [push, pull_request]

jobs:
  build:
    environment:
      name: testing-fastapi-course
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      - name: install python version 3.9
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: installing all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v3

    #   - name: Cache Docker layers
    #     uses: actions/cache@v4
    #     with:
    #       path: /tmp/.buildx-cache
    #       key: ${{ runner.os }}-buildx-${{ github.sha }}
    #       restore-keys: |
    #         ${{ runner.os }}-buildx-   
      
    #   - name: Login to Docker Hub
    #     uses: docker/login-action@v3
    #     with:
    #       username: ${{ secrets.DOCKER_HUB_USERNAME }}
    #       password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
    #   - name: Build and push
    #     uses: docker/build-push-action@v6
    #     with:
    #       push: true
    #       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/smd-fcc-fastapi:latest
    #       cache-from: type=local,src=/tmp/.buildx-cache
    #       cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    #   - # Temp fix
    #     # https://github.com/docker/build-push-action/issues/252
    #     # https://github.com/moby/buildkit/issues/1896
    #     name: Move cache
    #     run: |
    #       rm -rf /tmp/.buildx-cache
    #       mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production-fastapi-course

    steps:
      - name: pulling git repo
        uses: actions/checkout@v4
      - name: deploying to heroku
        uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APPNAME}} #Must be unique in Herokus
          heroku_email: ${{secrets.HEROKU_EMAIL}}

      # - name: deploy to ubuntu server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{secrets.PROD_HOST}}
      #     username: ${{secrets.PROD_USERNAME}}
      #     password: ${{secrets.PROD_PASSWORD}}
      #     script: |
      #       cd app/src
      #       git pull
      #       echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api